{"version":3,"sources":["../../src/lib.ts","../../src/data.ts","../../src/editor/store.ts","../../src/editor/default-controls.tsx","../../src/editor/components.tsx","../../src/editor/controls.tsx","../../src/hooks/use-key-press.ts","../../src/editor/input-options.tsx","../../src/editor/edit-panel.tsx","../../src/hooks/use-click-outside.ts","../../src/editor/sidebar.tsx","../../src/editor/form.tsx","../../src/editor.tsx","../../src/render.ts","App.tsx","index.tsx"],"names":["uuidv4","replace","r","Math","c","v","isSerializedInput","toBeDetermined","isSerializedContainer","isSerializedText","isSerializedForm","Element","constructor","control","data","this","deepmerge","id","type","Container","defaultValues","options","className","attributes","children","map","direction","Form","cm","col","Error","TextElement","InputElement","a","placeholder","opt","Control","definition","name","isContainer","isInput","isText","ContainerControl","InputControl","label","classNames","wrapper","input","TextControl","tag","text","defaultControls","registered","register","controls","sc","React","useStoreContext","useStore","unserialize","dataChildren","child","storeReducer","st","action","store","fromContainer","fromIndex","element","destIndex","cntrl","console","container","addElement","form","e","editing","undefined","option","value","target","currentIndex","o","index","initStore","defaultValue","Object","Map","useProvidedStoreContext","useStoreReducer","dispatch","Choices","layout","style","display","width","flexWrap","flexDirection","paddingRight","renderOptions","el","rend","choices","key","choicesLayout","icon","h","para","readOnly","hasOptions","n","Title","borderBottom","padding","Scrolling","flexGrow","overflow","minHeight","Values","flex","ControlLabelEl","cursor","backgroundColor","listStyle","margin","userSelect","border","svg","height","marginRight","ControlLabel","useDrag","item","collect","monitor","opacity","ref","drag","onClick","ControlsEl","ul","Controls","Array","defaultOptions","useKeyPress","keys","callback","opts","keyList","useMemo","callbackRef","useRef","useEffect","handle","useCallback","identifier","window","targetNode","DeleteBtn","NewOption","onComplete","inputRef","saveValue","nested","deleteAttr","ev","NEW","Symbol","DELETE","OptionEl","OptionLabel","Option","onChange","DropEl","transition","Drop","useDrop","accept","isHovered","drop","dropRef","cn","InputOptions","ignore","useState","setEditing","i","focused","editingOption","length","REQUIRED_TYPES","RequiredCheckmark","checked","String","InputType","t","s","OptionLayout","patch","InputEdit","dp","ContainerEdit","TextHeadingSize","txt","TextEdit","Edit","EditPanelEl","background","overflowY","justifyContent","borderTop","legend","color","fontSize","alignItems","marginBottom","fontWeight","button","marginLeft","fieldset","marginTop","textarea","span","EditPanel","handler","panelRef","listener","event","document","SidebarEl","paddingBottom","Sidebar","HorizontalDropEl","useFormDrop","HorizonontalDrop","props","VerticalDropEl","minWidth","VerticalDrop","ElementPreviewEl","position","borderWidth","borderColor","borderStyle","outline","boxShadow","zIndex","top","right","borderRadius","borderBottomLeftRadius","displayEdit","ControlPreview","InputPreview","TextPreview","ContainerPreviewEl","left","borderTopRightRadius","borderTopLeftRadius","borderBottomWidth","writingMode","textOrientation","ContainerPreview","preview","empty","parent","ElementPreview","FormElementsEl","justifyItems","boxSizing","FormElements","canDrop","FormPanelEl","FormPanel","EditorEl","gridTemplateColumns","gridTemplateRows","gap","Editor","ctx","backend","HTML5Backend","StoreContext","skipAttributes","class","columnSmWidth","parentElement","root","k","attrs","renderer","float","for","req","find","asterisk","createInput","labelTitle","isVertical","Boolean","optionsWrapper","cb","optId","inputId","labelEl","inputType","select","row","DEFAULT","App","setValue","htmlRef","href","json","serialize","log","JSON","stringify","tree","render","current","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.03f63ca2.chunk.js","sourcesContent":["// uses Math.random which may only be pseudo random\nexport function uuidv4():string {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport function capitalize(s: string): string {\n    return s.charAt(0).toUpperCase() + s.slice(1)\n}\n","export type ChoicesLayoutTypes = 'vertical' | 'horizontal' | 'two_column' | 'three_column'\n\n\nexport interface SerializedOption {\n    id: string\n    value: string\n}\n\nexport interface SerializedElement {\n    type: string\n    id: string\n    control: string\n    className?: string\n    attributes?: Array<SerializedOption>\n}\n\nexport interface SerializedInputElement extends SerializedElement {\n    type: string\n    label: string\n    name: string\n    classNames: {\n        wrapper: string\n        label: string\n        input: string\n    }\n    choicesLayout?: ChoicesLayoutTypes,\n    options: Array<SerializedOption>\n}\n\nexport interface SerializedTextElement extends SerializedElement {\n    tag: string\n    text: string\n}\n\nexport type ElementSerialization =\n    | SerializedForm\n    | SerializedElement\n    | SerializedContainer\n    | SerializedTextElement\n    | SerializedInputElement\n\nexport interface SerializedContainer extends SerializedElement {\n    direction: string // 'row' | 'column'\n    children: Array<ElementSerialization>\n}\n\nexport interface SerializedForm extends SerializedContainer {\n\n}\n\nexport function isSerializedInput(\n    toBeDetermined: SerializedElement\n): toBeDetermined is SerializedInputElement { return (toBeDetermined.type === 'INPUT') }\n\nexport function isSerializedContainer(\n    toBeDetermined: SerializedElement\n): toBeDetermined is SerializedContainer { return (toBeDetermined.type === 'CONTAINER') }\n\nexport function isSerializedText(\n    toBeDetermined: SerializedElement\n): toBeDetermined is SerializedTextElement { return (toBeDetermined.type === 'TEXT') }\n\nexport function isSerializedForm(\n    toBeDetermined: any\n): toBeDetermined is SerializedForm { return (toBeDetermined.type === 'FORM') }\n\n","import * as React from 'react'\nimport deepmerge from 'deepmerge'\nimport { uuidv4 } from '../lib'\nimport {\n    SerializedForm,\n    SerializedOption,\n    SerializedElement,\n    SerializedContainer,\n    SerializedTextElement,\n    SerializedInputElement,\n    ChoicesLayoutTypes,\n    isSerializedText,\n    isSerializedContainer,\n    isSerializedInput,\n    ElementSerialization,\n} from '../data'\n\nexport interface ControlDefinition {\n    id: string\n    icon: React.ReactNode\n    name: string\n    placeholder?(element: Element): React.ReactNode\n    hasOptions?: boolean,\n    defaultValues?: any,\n}\n\ntype ControlsMap = Map<string, Control>\n\nexport type NestedType = 'options' | 'attributes'\n\nexport interface Store {\n    controls: ControlsMap,\n    form: Form\n    editing?: Element\n}\n\nexport interface ElementData {\n    className: string\n    attributes: Array<SerializedOption>\n}\n\nexport class Element {\n\n    id: string\n    control: Control\n    data: ElementData\n    constructor(control: Control, data:any = {}) {\n        this.control = control\n        this.id = data.id || uuidv4()\n        this.data = deepmerge(control.defaultValues, data)\n    }\n\n    serialize(): SerializedElement {\n        return {\n            id: this.id,\n            type: 'element',\n            control: this.control.id,\n            ...this.data,\n        }\n    }\n\n}\n\n\ninterface ContainerData extends ElementData {\n    children: Array<Element>\n}\n\n\nexport interface ContainerOptions {\n    id?: string\n    direction: string // 'row' | 'column'\n    data?: ContainerData\n    children?: Array<Element>\n}\n\ntype ContainerChild = Element|TextElement|Container|InputElement\n\nexport class Container extends Element {\n    direction: string // 'row' | 'column'\n    children: Array<ContainerChild>\n\n    constructor(control:Control, options: ContainerOptions = control.defaultValues) {\n        super(control, options)\n        this.direction = options.direction || control.defaultValues.direction\n        this.children = options.children || control.defaultValues.children\n        this.data = deepmerge(this.data, {\n            ...options,\n            className: '',\n            attributes: [],\n        })\n    }\n\n    get isRow(): boolean {\n        return this.direction === 'row'\n    }\n\n    serialize(): SerializedContainer {\n        return {\n            ...super.serialize(),\n            ...this.data,\n            children: this.children.map(c => c.serialize()),\n            direction: this.direction,\n            type: 'CONTAINER',\n        }\n    }\n\n}\n\nexport class Form extends Container {\n\n    constructor(cm: ControlsMap, options?: ContainerOptions) {\n        const col = cm.get('col')\n        if (!col) { throw new Error(\"Column control doesn't exist?\") }\n        super(col, { ...options, direction: 'row' })\n        this.data.className = 'formial-form'\n    }\n\n    serialize(): SerializedForm {\n        return {\n            ...super.serialize(),\n            type: 'FORM',\n        }\n    }\n\n}\n\ninterface TextData extends ElementData {\n    tag: string\n    text: string\n}\n\nexport class TextElement extends Element {\n\n    data: TextData\n\n    constructor(control:Control, data = {}) {\n        super(control, data)\n        this.data = deepmerge(control.defaultValues, data) as TextData\n    }\n\n    serialize(): SerializedTextElement {\n        return {\n            ...super.serialize(),\n            ...this.data,\n            type: 'TEXT',\n        }\n    }\n\n}\n\n\n\nexport interface InputData extends ElementData {\n    label: string\n    name: string\n    classNames: {\n        wrapper: string\n        label: string\n        input: string\n    }\n    options: Array<SerializedOption>\n    choicesLayout?: ChoicesLayoutTypes\n}\n\n\nexport class InputElement extends Element {\n\n    data: InputData\n\n    constructor(control: Control, data = {}) {\n        super(control, data)\n        this.data = deepmerge(control.defaultValues, data)\n        //this.data.attributes = (this.data.attributes || [])\n        if (this.control.hasOptions) {\n            this.data.options = (this.data.options || [])\n        }\n    }\n\n    nested(nested: NestedType, id: string): SerializedOption | undefined {\n        return this.data[nested].find(a => a.id == id)\n    }\n\n    // attrVal(value: string): string | undefined {\n    //     this.attr()\n    //     return this.data.attributes.find(a => a.value === value)\n    // }\n\n    get placeholder(): React.ReactNode {\n        return (this.control.placeholder && this.control.placeholder(this)) || null\n    }\n\n    get optionPairs(): Array<[string, string]> {\n        const { options } = this.data\n        if (options) {\n            return options.map(opt => (\n                [opt.id, opt.value]\n            ))\n        }\n        return []\n    }\n\n    serialize(): SerializedInputElement {\n        return {\n            ...super.serialize(),\n            ...this.data,\n            type: 'INPUT',\n        }\n    }\n\n}\n\n\nexport class Control {\n\n    id: string\n    name: string\n    icon: React.ReactNode\n    _defaultValues: any\n    hasOptions?: boolean\n    placeholder?: (element: Element) => React.ReactNode\n\n    constructor(definition: ControlDefinition) {\n        this.name = definition.name\n        this.id = definition.id\n        this.icon = definition.icon\n        this.placeholder = definition.placeholder\n        this.hasOptions = definition.hasOptions\n        this._defaultValues = deepmerge(this.defaultValues || {}, definition.defaultValues || {})\n    }\n\n    get defaultValues(): any {\n        return deepmerge(this._defaultValues, {\n            name: `${this.id}-${Math.round(Math.random() * 9999) + 1000}`,\n        })\n    }\n\n    createElement(): Element {\n        return new InputElement(this)\n    }\n}\n\n\nexport function isContainer(\n    toBeDetermined: any,\n): toBeDetermined is Container {\n    return (toBeDetermined instanceof Container)\n}\n\nexport function isInput(\n    toBeDetermined: any,\n): toBeDetermined is InputElement {\n    return (toBeDetermined instanceof InputElement)\n}\n\nexport function isText(\n    toBeDetermined: any,\n): toBeDetermined is TextElement {\n    return (toBeDetermined instanceof TextElement)\n}\n\nexport class ContainerControl extends Control {\n\n    constructor(definition: ControlDefinition) {\n        super(definition)\n        this._defaultValues = deepmerge((this._defaultValues || {}), {\n            children: [],\n        })\n    }\n\n    createElement(): Element {\n        return new Container(this)\n    }\n}\n\nexport class InputControl extends Control {\n    constructor(definition: ControlDefinition) {\n        super(definition)\n        this._defaultValues = deepmerge((this._defaultValues || {}), {\n            label: `${definition.name} label`,\n            className: 'mb-2',\n            classNames: {\n                wrapper: this.wrapperClassName,\n                label: '',\n                input: 'form-control',\n            },\n            attributes: [],\n        })\n    }\n\n    get wrapperClassName() {\n        switch (this.id) {\n            case 'input':\n            case 'textarea':\n            case 'select': {\n                return 'form-floating'\n            }\n        }\n        return 'form-control'\n    }\n\n}\n\n// export class ColumnControl extends Control {\n//     createElement(): Element {\n//         return new Container(this, { direction: 'column' })\n//     }\n// }\n\nexport class TextControl extends Control {\n    constructor(definition: ControlDefinition) {\n        super(definition)\n        this._defaultValues = deepmerge((this._defaultValues || {}), {\n            tag: this.id === 'para' ? 'p' : 'h3',\n            text: 'Some text…',\n            className: '',\n        })\n    }\n\n    createElement(): Element {\n        return new TextElement(this)\n    }\n}\n\n\nexport const defaultControls = {\n    registered: new Map<string, Control>(),\n\n    register(controls: Array<Control>) {\n        controls.forEach(c => this.registered.set(c.id, c))\n    },\n}\n\ninterface InsertElementOptions {\n    id: string,\n    container: Container, destIndex: number,\n    fromIndex?: number, fromContainer?: Container\n}\nexport function addElement(\n    store: Store,\n    {\n        id, container, destIndex, fromIndex, fromContainer,\n    }: InsertElementOptions,\n): Store {\n    let cntrl: Control | undefined\n    let element: Element | undefined\n\n    if (fromIndex != null && fromContainer) {\n        element = fromContainer.children[fromIndex]\n        fromContainer.children.splice(fromIndex, 1)\n        if (fromContainer === container && fromIndex < destIndex) {\n            destIndex -= 1 // eslint-disable-line no-param-reassign\n        }\n    } else {\n        cntrl = store.controls.get(id)\n        if (!cntrl) {\n            // eslint-disable-next-line no-console\n            console.warn(`attempted to drop id ${id} but no control exists`)\n            return store\n        }\n    }\n    if (!element && cntrl) {\n        element = cntrl.createElement()\n    }\n    if (element) {\n        container.children.splice(destIndex, 0, element)\n    }\n    return { ...store }\n}\n\ninterface StoreContext {\n    store: Store\n    dispatch: React.Dispatch<Action> //  (patch:any): void\n}\n\nconst sc = React.createContext(null as any as StoreContext)\nsc.displayName = 'StoreContext'\nexport const useStoreContext = ():StoreContext => React.useContext(sc)\n\nexport const useStore = ():Store => useStoreContext().store\n\nconst unserialize = (cm: ControlsMap, data: ElementSerialization):Element|null => {\n    const control = cm.get(data.control)\n    if (!control) { return null }\n\n    if (isSerializedText(data)) {\n        return new TextElement(control, data)\n    }\n\n    if (isSerializedInput(data)) {\n        return new InputElement(control, data)\n    }\n\n    const children:Array<ContainerChild> = []\n    const dataChildren = (data as any).children\n    if (dataChildren) {\n        dataChildren.forEach((c:ElementSerialization) => {\n            const child = unserialize(cm, c)\n            if (child) children.push(child)\n        })\n    }\n\n    if (isSerializedContainer(data)) {\n        return new Container(control, { ...data, children })\n    }\n\n    // if all else fails attempt to create a form and unserialize it\n    return new Form(cm, { ...data, children } as any as ContainerOptions)\n}\n\ntype Action =\n    | { type: 'REPLACE', form?: SerializedForm }\n    | { type: 'APPEND_ELEMENT', control: Control }\n    | { type: 'ADD_ELEMENT', id: string,\n        container: Container, destIndex: number,\n        fromIndex?: number, fromContainer?: Container }\n    | { type: 'DELETE', target: Element, container: Container }\n    | { type: 'UPDATE', target: Element, patch: any }\n    | { type: 'UPSERT_OPTION', input: InputElement, nested: NestedType, id: string, value?: string }\n    | { type: 'UPDATE_OPTION', option: SerializedOption, value: string }\n    | { type: 'EDIT', target: Element }\n    | { type: 'HIDE_EDIT' }\n    | { type: 'REORDER_OPTION', input: InputElement, id: string, index: number, nested: NestedType }\n    | { type: 'ADD_ATTRIBUTE', input: InputElement, nested: NestedType }\n    | { type: 'DELETE_OPTION', input: InputElement, nested: NestedType, id: string }\n    | { type: 'REPLACE_NEW_ATTRIBUTE', input: InputElement, nested: string, name: string, }\n\nconst storeReducer = (st:Store, action: Action): Store => {\n    switch (action.type) {\n        case 'ADD_ELEMENT': {\n            return addElement(st, action)\n        }\n        case 'APPEND_ELEMENT': {\n            st.form.children.push(action.control.createElement())\n            return { ...st }\n        }\n        case 'REPLACE': {\n            if (action.form) {\n                const form = unserialize(st.controls, action.form)\n                if (form && form instanceof Form) {\n                    return { ...st, form }\n                }\n            }\n            return st\n        }\n        case 'DELETE': {\n            action.container.children = [\n                ...action.container.children.filter(e => e.id !== action.target.id),\n            ]\n            return { ...st, editing: undefined }\n        }\n        case 'UPSERT_OPTION': {\n            const option = action.input.nested(action.nested, action.id)\n            if (option) {\n                option.value = action.value || ''\n            } else {\n                action.input.data[action.nested]\n                    .push({ id: action.id, value: action.value || '' })\n            }\n            return { ...st }\n        }\n        case 'UPDATE_OPTION': {\n            action.option.value = action.value\n            return { ...st }\n        }\n        case 'UPDATE': {\n            action.target.data = deepmerge(action.target.data as any, action.patch)\n            return { ...st }\n        }\n        case 'EDIT': {\n            return { ...st, editing: action.target }\n        }\n        case 'HIDE_EDIT': {\n            return { ...st, editing: undefined }\n        }\n        case 'REORDER_OPTION': {\n            const options = action.input.data[action.nested]\n            const currentIndex = options.findIndex(o => o.id === action.id)\n\n            const option = options[currentIndex]\n            action.input.data[action.nested].splice(currentIndex, 1)\n\n            if (action.index > currentIndex) {\n                action.index -= 1\n            }\n            action.input.data[action.nested].splice(action.index, 0, option)\n            return { ...st }\n        }\n        case 'ADD_ATTRIBUTE': {\n            action.input.data[action.nested].push({ id: '', value: '' })\n            return { ...st }\n        }\n        case 'REPLACE_NEW_ATTRIBUTE': {\n            delete action.input.data[action.nested]['']\n            action.input.data[action.nested][action.name] = ''\n            return { ...st }\n        }\n        case 'DELETE_OPTION': {\n            const option = action.input.nested(action.nested, action.id)\n            if (option) {\n                const index = action.input.data[action.nested].indexOf(option)\n                if (index != -1) {\n                    action.input.data[action.nested].splice(index, 1)\n                }\n            }\n            return { ...st }\n        }\n    }\n    return st\n}\n\nexport const initStore = (defaultValue?: SerializedForm):Store => {\n    const store = Object.create(null)\n    store.controls = new Map(defaultControls.registered)\n\n    store.form = defaultValue ? unserialize(store.controls, defaultValue)\n        : new Form(store.controls, defaultValue)\n\n    // store.elements.push(store.controls.get('select')!.createElement());\n    // [store.editing] = store.elements\n\n    return store\n}\n\nexport const useStoreReducer = (defaultValue?: SerializedForm) => (\n    React.useReducer(storeReducer, defaultValue, initStore)\n)\n\nexport const useProvidedStoreContext = (defaultValue?: SerializedForm):StoreContext => {\n    const [store, dispatch] = useStoreReducer(defaultValue)\n\n    return React.useMemo<StoreContext>(() => ({ store, dispatch }), [store])\n}\n\nexport { sc as StoreContext, unserialize }\n","import * as React from 'react'\nimport styled, { CSSObject } from 'styled-components'\nimport { CaretSquareDown } from '@styled-icons/fa-regular/CaretSquareDown'\nimport { Font } from '@styled-icons/fa-solid/Font'\nimport { GripLines } from '@styled-icons/fa-solid/GripLines'\nimport { Square } from '@styled-icons/fa-regular/Square'\nimport { Heading } from '@styled-icons/fa-solid/Heading'\nimport { Paragraph } from '@styled-icons/fa-solid/Paragraph'\nimport { GripLinesVertical } from '@styled-icons/fa-solid/GripLinesVertical'\nimport { DotCircle } from '@styled-icons/fa-solid/DotCircle'\nimport { CheckSquare } from '@styled-icons/fa-solid/CheckSquare'\nimport { ChoicesLayoutTypes } from '../data'\nimport {\n    InputControl, ContainerControl,\n    InputElement, TextControl, TextElement, defaultControls,\n} from './store'\n\ntype RenderT = (key: string, value: string) => React.ReactNode\n\n\nconst Choices = styled.div<{ layout?: ChoicesLayoutTypes }>(({ layout }) => {\n    const style:CSSObject = {\n        display: 'flex',\n        width: '100%',\n        flexWrap: 'wrap',\n        flexDirection: 'column',\n    }\n    if (layout && layout !== 'vertical') {\n        style.flexDirection = 'row'\n        const label:CSSObject = {\n            paddingRight: '5px',\n\n        }\n        if (layout === 'two_column') {\n            label.width = '50%'\n        }\n        if (layout === 'three_column') {\n            label.width = '33%'\n        }\n        style['> label'] = label\n    }\n    return style\n})\n\nconst renderOptions = (el: InputElement, rend: RenderT) => {\n    const options = el.optionPairs\n    if (options.length === 0) {\n        return rend('', '')\n    }\n    const choices = options.map(([name, label]) => (\n        <label key={name}>{rend(name, label)}<span>{label}</span></label>\n    ))\n    return (\n        <Choices layout={el.data.choicesLayout}>{choices}</Choices>\n    )\n}\n\n\ndefaultControls.register([\n    new TextControl({\n        id: 'heading',\n        name: 'Heading',\n        icon: <Heading />,\n        placeholder(h:TextElement) { return React.createElement(h.data.tag, h.data.text) },\n    }),\n\n    new TextControl({\n        id: 'para',\n        name: 'Paragraph',\n        icon: <Paragraph />,\n        placeholder(para:TextElement) { return <p>{para.data.text}</p> },\n    }),\n\n    new InputControl({\n        id: 'input',\n        name: 'Text Input',\n        icon: <Font />,\n        placeholder() { return <input type='text' className='form-control' readOnly /> },\n    }),\n\n    new InputControl({\n        id: 'textarea',\n        name: 'Text Area',\n        icon: <Square />,\n        placeholder() { return <textarea className='form-control' readOnly /> },\n    }),\n\n    new InputControl({\n        id: 'checkbox',\n        name: 'Checkboxes',\n        icon: <CheckSquare />,\n        hasOptions: true,\n        defaultValues: {\n            options: [],\n            choicesLayout: 'vertical',\n        },\n        placeholder(el: InputElement) {\n            return renderOptions(el, (n: string) => (\n                <input type=\"checkbox\" name={`pv-${n}`} readOnly />\n            ))\n        },\n    }),\n    new InputControl({\n        id: 'radio',\n        name: 'Radio Input',\n        hasOptions: true,\n        icon: <DotCircle />,\n        defaultValues: {\n            options: [],\n            choicesLayout: 'vertical',\n        },\n        placeholder(el: InputElement) {\n            return renderOptions(el, (n: string) => (\n                <input key={n} type=\"radio\" name={`pv-${el.data.name}`} readOnly />\n            ))\n        },\n    }),\n    new InputControl({\n        id: 'select',\n        name: 'Select',\n        hasOptions: true,\n        icon: <CaretSquareDown />,\n        defaultValues: {\n            options: [],\n        },\n        placeholder(el: InputElement) {\n            const options = el.optionPairs\n            return (\n                <select name={`pv-${el.data.name}`}>\n                    {options.map(([v, l]) => (\n                        <option key={v} value={v}>{l}</option>\n                    ))}\n                </select>\n            )\n        },\n    }),\n    new ContainerControl({\n        id: 'row',\n        name: 'Row',\n        icon: <GripLines />,\n        defaultValues: {\n            direction: 'row',\n        },\n    }),\n    new ContainerControl({\n        id: 'col',\n        name: 'Column',\n        icon: <GripLinesVertical />,\n        defaultValues: {\n            direction: 'column',\n        },\n    }),\n])\n","import styled from 'styled-components'\n\nexport const Title = styled.h4.attrs({\n    className: 'title',\n})({\n    borderBottom: '1px solid lightgray',\n    padding: '5px',\n})\n\nexport const Scrolling = styled.div({\n    flexGrow: 1,\n    overflow: 'auto',\n    minHeight: 0,\n    paddingRight: '10px',\n})\n\nexport const Values = styled.div({\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    minHeight: 0,\n    overflow: 'hidden',\n})\n\nexport const DropRevealColor = '#e8e8e8'\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { useDrag } from 'react-dnd'\nimport { useStore, useStoreContext, Control } from './store'\nimport './default-controls'\n\nimport { Title, Scrolling } from './components'\n\nconst ControlLabelEl = styled.li({\n    cursor: 'pointer',\n    backgroundColor: 'white',\n    listStyle: 'none',\n    margin: '5px',\n    padding: '10px',\n    userSelect: 'none',\n    border: '1px dashed #ddd',\n    svg: {\n        height: '20px',\n        marginRight: '0.5rem',\n    },\n})\n\nconst ControlLabel:React.FC<{ control: Control }> = ({ control }) => {\n    const { id, name, icon } = control\n    const { dispatch } = useStoreContext()\n\n    const [{ opacity }, drag] = useDrag({\n        item: { id, type: 'control' },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.4 : 1,\n        }),\n    })\n\n    return (\n        <ControlLabelEl\n            ref={drag}\n            style={{ opacity }}\n            onClick={() => {\n                dispatch({ type: 'APPEND_ELEMENT', control })\n            }}\n        >\n            {icon}\n            <span>{name}</span>\n        </ControlLabelEl>\n    )\n}\n\nconst ControlsEl = styled.div({\n    ul: {\n        padding: 0,\n        margin: 0,\n    },\n})\n\nexport const Controls = () => {\n    const { editing, controls } = useStore()\n    if (editing) {\n        return null\n    }\n    return (\n        <ControlsEl>\n            <Title>Elements</Title>\n            <Scrolling className=\"listing\">\n                <ul>\n                    {Array.from(controls.values()).map(c => (\n                        <ControlLabel key={c.id} control={c} />))}\n                </ul>\n            </Scrolling>\n        </ControlsEl>\n    )\n}\n","import { Ref, useEffect, useCallback, useRef, useMemo } from 'react'\n\n\ninterface Options {\n  /**\n   * target ref on which the events should be listened. If no target is specified,\n   * events are listened to on the window\n   */\n  target?: Ref<HTMLElement>;\n}\n\nconst EVENT_NAME = 'keydown'\n\nconst defaultOptions = {\n\n\n}\n\n// hook from https://usehooks.com/useKeyPress/\nexport function useKeyPress(\n    keys: string | Array<string>,\n    callback: (e: KeyboardEvent) => any,\n    opts?: Options,\n): void {\n    const keyList: Array<string> = useMemo(() => {\n        if (Array.isArray(keys)) {\n            return keys\n        }\n        return [keys]\n    }, [keys])\n    const options = Object.assign({}, defaultOptions, opts) as any\n\n    const callbackRef = useRef<(e: KeyboardEvent) => any>(callback)\n    const { target } = options\n\n    useEffect(() => {\n        callbackRef.current = callback\n    })\n\n    const handle = useCallback(\n        (e: KeyboardEvent) => {\n            if (keyList.some(identifier => e.key === identifier)) {\n                callbackRef.current(e)\n            }\n        },\n        [keyList],\n    )\n\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            const targetNode = target ? target.current : window\n            if (targetNode) {\n                targetNode.addEventListener(EVENT_NAME, handle)\n            }\n\n            return () => {\n                if (targetNode) {\n                    targetNode.removeEventListener(EVENT_NAME, handle)\n                }\n            }\n        }\n        return undefined\n    }, [keyList, target, callback])\n}\n","import React, { FC, useState, useRef, useEffect } from 'react'\nimport { TrashAlt } from '@styled-icons/fa-solid/TrashAlt'\nimport styled from 'styled-components'\nimport cn from 'classnames'\nimport { useDrop, useDrag } from 'react-dnd'\nimport { SerializedOption } from '../data'\nimport { DropRevealColor } from './components'\nimport { useKeyPress } from '../hooks/use-key-press'\nimport {\n    NestedType, useStoreContext, InputElement,\n} from './store'\n\ninterface DropProps {\n    input: InputElement\n    index: number\n    nested: NestedType\n}\n\ninterface DropItem {\n    id: string\n}\n\nconst DeleteBtn = styled.button({\n    border: 0,\n})\n\nconst NewOption: FC<{\n    input: InputElement\n    nested: NestedType\n    onComplete: (id: string | typeof DELETE) => void\n}> = ({\n    input,\n    nested,\n    onComplete,\n}) => {\n    const sc = useStoreContext()\n\n    const inputRef = useRef<HTMLInputElement>(null)\n    const saveValue = () => {\n        const id = inputRef.current!.value\n        sc.dispatch({ type: 'UPSERT_OPTION', nested, input, id })\n        onComplete(id)\n    }\n\n    const deleteAttr = () => {\n        sc.dispatch({ type: 'DELETE_OPTION', input, nested, id: '' })\n        onComplete(DELETE)\n    }\n\n    useKeyPress(['Enter', 'Escape', 'Tab'], (ev) => {\n        switch (ev.key) {\n            case 'Tab': {\n                ev.preventDefault()\n                saveValue()\n                break\n            }\n            case 'Enter': {\n                saveValue()\n                break\n            }\n            case 'Escape': {\n                deleteAttr()\n                onComplete(DELETE)\n                break\n            }\n        }\n    }, { target: inputRef })\n\n    useEffect(() => {\n        inputRef.current!.focus()\n    }, [])\n\n    return (\n        <label>\n            <input\n                ref={inputRef}\n                defaultValue=''\n            />\n            <span className=\"value\" />\n            <DeleteBtn onClick={deleteAttr}>\n                <TrashAlt />\n            </DeleteBtn>\n        </label>\n    )\n}\n\nconst NEW = Symbol('new')\nconst DELETE = Symbol('delete')\n\nconst OptionEl = styled.label({\n    padding: '2px 0 2px 5px',\n})\n\nconst OptionLabel = styled.div({\n    flex: 1,\n    cursor: 'grab',\n})\n\nconst Option:FC<{\n    input: InputElement\n    nested: NestedType\n    index: number\n    focused: boolean\n    option: SerializedOption,\n    onComplete: (id: string | typeof NEW | typeof DELETE) => void\n}> = ({ input, nested, focused, index, onComplete, option }) => {\n    const sc = useStoreContext()\n    const inputRef = useRef<HTMLInputElement>(null)\n    const [{ opacity }, drag] = useDrag({\n        item: { id: option.id, index, type: 'option' },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.4 : 1,\n        }),\n    })\n    useKeyPress(['Enter', 'Tab'], (ev) => {\n        ev.preventDefault()\n        sc.dispatch({ type: 'UPDATE_OPTION', option, value: inputRef.current!.value })\n        onComplete(option.id)\n    }, { target: inputRef })\n\n    useEffect(() => {\n        if (focused) {\n            inputRef.current!.focus()\n        }\n    }, [focused])\n    return (\n        <OptionEl\n            className=\"draggable\"\n            style={{ opacity }}\n            ref={drag}\n        >\n            <OptionLabel>{option.id}:</OptionLabel>\n            <input\n                ref={inputRef}\n                className=\"value\"\n                value={option.value || ''}\n                onChange={({ target: { value } }) => sc.dispatch({\n                    type: 'UPDATE_OPTION', option, value,\n                })}\n            />\n            <DeleteBtn\n                onClick={() => {\n                    sc.dispatch({ type: 'DELETE_OPTION', id: option.id, input, nested })\n                    onComplete(DELETE)\n                }}\n            >\n                <TrashAlt />\n            </DeleteBtn>\n        </OptionEl>\n    )\n}\n\nconst DropEl = styled.div({\n    transition: 'all 0.3s ease-in-out',\n    height: '10px',\n    minHeight: '10px',\n    '&.isHovered': {\n        height: '40px',\n        minHeight: '40px',\n        border: `1px dashed ${DropRevealColor}`,\n    },\n    '&:last-child': {\n        flex: 1,\n    },\n})\n\n\nexport const Drop: React.FC<DropProps> = ({ input, nested, index }) => {\n    const sc = useStoreContext()\n    const [{ isHovered }, dropRef] = useDrop({\n        accept: 'option',\n        collect(item) {\n            return { isHovered: item.isOver() }\n        },\n        drop: (item) => {\n            const { id } = (item as any as DropItem)\n            sc.dispatch({ type: 'REORDER_OPTION', nested, input, id, index })\n        },\n    })\n    return <DropEl ref={dropRef} className={cn('drop', { isHovered })} />\n}\n\n\nexport const InputOptions: FC<{\n    label: string\n    input: InputElement\n    nested: NestedType\n    ignore?: Array<string>\n}> = ({\n    label,\n    input,\n    nested,\n    ignore = [],\n}) => {\n    const [editingOption, setEditing] = useState<string | typeof NEW>('')\n    let options = input.data[nested]\n    if (!options) {\n        return null\n    }\n    options = options.filter(opt => !ignore.includes(opt.id))\n\n    return (\n        <fieldset className='options'>\n            <legend>{label}:</legend>\n            <div className='controls'>\n                <button onClick={() => setEditing(NEW)} className='add-attr'>\n                    ➕\n                </button>\n            </div>\n            {options.length ? (\n                <div className=\"heading\">\n                    <span>ID</span>\n                    <span>Value</span>\n                </div>) : null}\n            {options.map((option, i) => (\n                <React.Fragment key={option.id}>\n                    <Drop input={input} nested={nested} index={i} />\n                    <Option\n                        focused={editingOption === option.id}\n                        nested={nested}\n                        option={option}\n                        input={input}\n                        index={i}\n                        onComplete={(id) => {\n                            if (id === DELETE) {\n                                setEditing('')\n                            } else if (i === options.length - 1) {\n                                setEditing(NEW)\n                            }\n                        }}\n                    />\n                </React.Fragment>\n            ))}\n            <Drop input={input} nested={nested} index={options.length} />\n            {editingOption === NEW && (\n                <NewOption\n                    nested={nested}\n                    input={input}\n                    onComplete={(id) => {\n                        if (id === DELETE) {\n                            setEditing('')\n                        } else {\n                            setEditing(id)\n                        }\n                    }}\n                />)}\n        </fieldset>\n    )\n}\n","import React, { FC, useRef } from 'react'\nimport styled from 'styled-components'\nimport { useOnClickOutside } from '../hooks/use-click-outside'\nimport {\n    useStoreContext, InputElement, Element,\n    Container, isContainer, isInput, isText, TextElement,\n} from './store'\nimport { capitalize } from '../lib'\nimport { Title, Scrolling, Values } from './components'\nimport { InputOptions } from './input-options'\n\nconst REQUIRED_TYPES = ['input', 'textarea', 'radio']\n\nconst RequiredCheckmark: FC<{ input: InputElement }> = ({ input }) => {\n    const sc = useStoreContext()\n    if (!REQUIRED_TYPES.includes(input.control.id)) {\n        return null\n    }\n    return (\n        <label>\n            <span>Required?</span>\n            <input\n                type=\"checkbox\"\n                className=\"value\"\n                checked={input.nested('attributes', 'required')?.value === 'true' || false}\n                onChange={({ target: { checked } }) => {\n                    sc.dispatch({ type: 'UPSERT_OPTION', input, nested: 'attributes', id: 'required', value: String(checked) })\n                }}\n            />\n        </label>\n    )\n}\n\nconst InputType: FC<{ input: InputElement }> = ({ input }) => {\n    const sc = useStoreContext()\n    if (input.control.id !== 'input') {\n        return null\n    }\n    return (\n        <label>\n            <span>Type:</span>\n            <select\n                name=\"type\"\n                className=\"value\"\n                value={input.nested('attributes', 'type')?.value || 'text'}\n                onChange={({ target: { value } }) => sc.dispatch({\n                    type: 'UPSERT_OPTION',\n                    input,\n                    id: 'type',\n                    nested: 'attributes',\n                    value,\n                })}\n            >\n                {['text', 'number', 'email', 'date'].map(\n                    t => <option key={t} value={t}>{capitalize(t)}</option>,\n                )}\n            </select>\n        </label>\n    )\n}\n\n\nconst OptionLayout: FC<{ input: InputElement }> = ({ input }) => {\n    const sc = useStoreContext()\n    if (!input.data.choicesLayout) { return null }\n    return (\n        <label>\n            <span>Choices Layout:</span>\n            <select\n                value={input.data.choicesLayout}\n                className=\"value\"\n                onChange={({ target: { value } }) => sc.dispatch({\n                    type: 'UPDATE',\n                    target: input,\n                    patch: { choicesLayout: value },\n                })}\n            >\n                <option value=\"vertical\">Vertical</option>\n                <option value=\"horizontal\">Horizontal</option>\n                <option value=\"two_column\">Two Column</option>\n                <option value=\"three_column\">Three Column</option>\n            </select>\n        </label>\n    )\n}\n\nconst InputEdit: FC<{ input: InputElement }> = ({ input }) => {\n    const sc = useStoreContext()\n    const { data } = input\n    const dp = (patch: any) => sc.dispatch({ type: 'UPDATE', target: input, patch })\n\n    return (\n        <Values className=\"input\">\n            <Title>Edit {input.control.name}</Title>\n            <Scrolling>\n                <label>\n                    <span>Label:</span>\n                    <input\n                        className=\"value\"\n                        value={data.label || ''}\n                        onChange={({ target: { value } }) => dp({ label: value })}\n                    />\n                </label>\n                <label>\n                    <span>Name:</span>\n                    <input\n                        className=\"value\"\n                        value={data.name || ''}\n                        onChange={({ target: { value } }) => dp({ name: value })}\n                    />\n                </label>\n                <InputType input={input} />\n                <RequiredCheckmark input={input} />\n                <label>\n                    <span>Class:</span>\n\n                    <input\n                        className=\"value\"\n                        value={data.className || ''}\n                        onChange={({ target: { value } }) => dp({ className: value })}\n                    />\n                </label>\n                <OptionLayout input={input} />\n                <InputOptions input={input} label=\"Options\" nested=\"options\" />\n                <fieldset>\n                    <legend>Other Class Names:</legend>\n                    <label>\n                        <span>Wrapper:</span>\n                        <input\n                            className=\"value\"\n                            value={data.classNames.wrapper || ''}\n                            onChange={({ target: { value } }) => {\n                                dp({ classNames: { wrapper: value } })\n                            }}\n                        />\n                    </label>\n                    <label>\n                        <span>Label:</span>\n                        <input\n                            className=\"value\"\n                            value={data.classNames.label || ''}\n                            onChange={({ target: { value } }) => {\n                                dp({ classNames: { label: value } })\n                            }}\n                        />\n                    </label>\n                    <label>\n                        <span>Input:</span>\n                        <input\n                            className=\"value\"\n                            value={data.classNames.input || ''}\n                            onChange={({ target: { value } }) => {\n                                dp({ classNames: { input: value } })\n                            }}\n                        />\n                    </label>\n                </fieldset>\n                <InputOptions\n                    input={input}\n                    label=\"Attributes\"\n                    nested=\"attributes\"\n                    ignore={['required', 'type']}\n                />\n            </Scrolling>\n        </Values>\n    )\n}\n\nconst ContainerEdit: FC<{ container: Container }> = ({ container }) => {\n    const sc = useStoreContext()\n    const { data } = container\n    const dp = (patch: any) => sc.dispatch({ type: 'UPDATE', target: container, patch })\n\n    return (\n        <Values className=\"container\">\n            <Title>Edit {container.control.name} container</Title>\n            <label>\n                <span>Class:</span>\n                <input\n                    className=\"value\"\n                    value={data.className || ''}\n                    onChange={({ target: { value } }) => dp({ className: value })}\n                />\n            </label>\n\n        </Values>\n    )\n}\n\nconst TextHeadingSize: FC<{\n    txt: TextElement\n    onChange: (value: string) => void\n}> = ({ txt, onChange }) => {\n    if (txt.control.id !== 'heading') {\n        return null\n    }\n    return (\n        <label>\n            <span>Size:</span>\n            <select value={txt.data.tag} onChange={ev => onChange(ev.target.value)}>\n                <option value=\"h1\">Heading 1</option>\n                <option value=\"h2\">Heading 2</option>\n                <option value=\"h3\">Heading 3</option>\n                <option value=\"h4\">Heading 4</option>\n                <option value=\"h5\">Heading 5</option>\n                <option value=\"h6\">Heading 6</option>\n            </select>\n        </label>\n    )\n}\n\nconst TextEdit: FC<{ control: TextElement }> = ({ control }) => {\n    const sc = useStoreContext()\n    const { data } = control\n    const dp = (patch: any) => sc.dispatch({ type: 'UPDATE', target: control, patch })\n\n    return (\n        <Values className=\"text\">\n            <Title>Edit text</Title>\n            <label>\n                <span>Text:</span>\n\n                <textarea\n                    id={control.id}\n                    value={data.text || ''}\n                    onChange={({ target: { value } }) => dp({ text: value })}\n                />\n            </label>\n            <TextHeadingSize\n                txt={control}\n                onChange={(tag:string) => dp({ tag })}\n\n            />\n            <label>\n                <span>Class:</span>\n\n                <input\n                    className=\"value\"\n                    value={data.className || ''}\n                    onChange={({ target: { value } }) => dp({ className: value })}\n                />\n            </label>\n        </Values>\n    )\n}\n\n\nconst Edit: FC<{ target: Element }> = ({ target }) => {\n    if (isContainer(target)) {\n        return <ContainerEdit container={target} />\n    }\n    if (isInput(target)) {\n        return <InputEdit input={target} />\n    }\n    if (isText(target)) {\n        return <TextEdit control={target} />\n    }\n    return null\n}\n\n\nconst EditPanelEl = styled.div({\n    height: '100%',\n    background: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n\n    '.edit-pane': {\n        flex: 1,\n        overflowY: 'auto',\n        padding: '10px',\n    },\n    '.footer': {\n        padding: '10px',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        borderTop: '1px solid lightGrey',\n    },\n    legend: {\n        backgroundColor: '#000',\n        color: '#fff',\n        padding: '3px 6px',\n        fontSize: '16px',\n    },\n    'label, .heading': {\n        display: 'flex',\n        alignItems: 'center',\n        '&:not(.draggable)': {\n            marginBottom: '5px',\n        },\n        '> *:first-child': {\n            width: '125px',\n        },\n    },\n    '.heading > *': {\n        fontWeight: 'bold',\n    },\n    '.value': {\n        flex: 1,\n        width: '125px',\n    },\n    button: {\n        marginLeft: '5px',\n        svg: {\n            height: '18px',\n        },\n    },\n    fieldset: {\n        marginTop: '1rem',\n        '.controls': {\n            display: 'flex',\n\n            justifyContent: 'flex-end',\n            '.add-attr': {\n                border: 0,\n                padding: '0 5px',\n            },\n        },\n    },\n    textarea: {\n        width: '100%',\n        minHeight: '50px',\n        padding: '4px',\n    },\n    '.widths': {\n        '.row': {\n            display: 'flex',\n            justifyContent: 'space-between',\n            span: {\n                flex: 1,\n                display: 'flex',\n                justifyContent: 'flex-end',\n                marginRight: '10px',\n                width: 'inherit',\n            },\n        },\n    },\n})\n\nexport const EditPanel = () => {\n    const sc = useStoreContext()\n    const panelRef = useRef<HTMLDivElement>(null)\n    const { editing } = sc.store\n    useOnClickOutside(panelRef, () => {\n        sc.dispatch({ type: 'HIDE_EDIT' })\n    })\n\n    if (!editing) {\n        return null\n    }\n\n    return (\n        <EditPanelEl ref={panelRef} className=\"edit-panel\">\n            <Edit target={editing} />\n        </EditPanelEl>\n    )\n}\n","// import { RefObj } from 'react'\n\n// hook from https://usehooks.com/useOnClickOutside/\n//\n\n\nimport { useEffect } from 'react'\n\n// /type RefObj = ReturnType<createRef<HTMLElement>>\ntype handlerT = (event: MouseEvent) => void // / MouseEventHandler<HTMLElement>\ntype refT = { current?: HTMLElement | null }\n\nexport function useOnClickOutside(ref: refT, handler:handlerT) {\n    useEffect(\n        () => {\n            const listener = (event:MouseEvent) => {\n                // Do nothing if clicking ref's element or descendent elements\n                if (!ref.current || ref.current.contains(event.target as any)) {\n                    return\n                }\n\n                handler(event)\n            }\n\n            document.addEventListener('mousedown', listener)\n\n\n            return () => {\n                document.removeEventListener('mousedown', listener)\n            }\n        },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler],\n    )\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nimport { Controls } from './controls'\nimport { EditPanel } from './edit-panel'\n\nconst SidebarEl = styled.div({\n    overflow: 'hidden',\n    display: 'flex',\n    paddingBottom: '20px',\n    '> *': {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        flexGrow: 1,\n        minHeight: 0, /* for Firefox */\n    },\n})\nexport const Sidebar:React.FC = () => (\n    <SidebarEl className=\"sidebar\">\n        <Controls />\n        <EditPanel />\n    </SidebarEl>\n)\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport cn from 'classnames'\nimport { useDrop, useDrag, DragElementWrapper, DragSourceOptions } from 'react-dnd'\nimport { GripHorizontal } from '@styled-icons/fa-solid/GripHorizontal'\nimport { Edit } from '@styled-icons/fa-solid/Edit'\nimport { TrashAlt } from '@styled-icons/fa-solid/TrashAlt'\nimport { Scrolling, DropRevealColor } from './components'\nimport {\n    useStore,\n    Element,\n    isContainer,\n    isText,\n    isInput,\n    InputElement,\n    TextElement,\n    useStoreContext,\n    Container,\n} from './store'\n\nconst DropEl = styled.div({\n    transition: 'all 0.3s ease-in-out',\n})\n\nconst HorizontalDropEl = styled(DropEl)({\n    height: '15px',\n    minHeight: '15px',\n    '&.isHovered': {\n        height: '100px',\n        minHeight: '100px',\n        background: DropRevealColor,\n    },\n    '&:last-child': {\n        flex: 1,\n    },\n})\n\ninterface DropProps {\n    index: number\n    container: Container\n}\n\ninterface DropItem {\n    id: string\n    fromIndex?: number\n    fromContainer?: Container\n}\n\nconst useFormDrop = ({ index, container }: DropProps) => {\n    const sc = useStoreContext()\n    const [{ isHovered }, dropRef] = useDrop({\n        accept: 'control',\n        collect(item) {\n            return { isHovered: item.isOver() }\n        },\n        drop: (item) => {\n            const { id, fromIndex, fromContainer } = (item as any as DropItem)\n            sc.dispatch({\n                type: 'ADD_ELEMENT',\n                id,\n                destIndex: index,\n                container,\n                fromIndex,\n                fromContainer,\n            })\n        },\n    })\n    return { isHovered, dropRef }\n}\n\nexport const HorizonontalDrop: React.FC<DropProps> = (props) => {\n    const { isHovered, dropRef } = useFormDrop(props)\n    return <HorizontalDropEl ref={dropRef} className={cn('drop', { isHovered })} />\n}\n\nconst VerticalDropEl = styled(DropEl)({\n    minWidth: '20px',\n    '&.isHovered': {\n        flex: 1,\n        background: DropRevealColor,\n    },\n})\n\nconst VerticalDrop: React.FC<DropProps> = (props) => {\n    const { isHovered, dropRef } = useFormDrop(props)\n\n    return (\n        <VerticalDropEl\n            ref={dropRef}\n            className={cn('drop', 'container-drop', { isHovered })}\n        />\n    )\n}\n\nconst ElementPreviewEl = styled.div<{ editing?: boolean }>(({ editing }) => ({\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'relative',\n    padding: '10px',\n    color: '#0c0c0c',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    minHeight: 'fit-content',\n    borderWidth: '2px',\n    background: editing ? '#ffffed' : 'white',\n    borderColor: editing ? '#a5a500;' : 'transparent',\n    borderStyle: 'dashed',\n    cursor: 'pointer',\n\n    'input, textarea, select': {\n        cursor: 'pointer',\n        '&:focus': {\n            outline: 'none',\n            borderColor: 'inherit',\n            boxShadow: 'none',\n        },\n    },\n\n    '&.input .label, &.textarea .label': {\n        marginBottom: '-20px',\n        zIndex: 1,\n        fontSize: '80%',\n        marginLeft: '10px',\n    },\n    '.control-type': {\n        fontSize: '0.8rem',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        border: '1px solid',\n        padding: '2px',\n        borderRadius: '8px',\n    },\n\n    '&:hover': {\n        '> .controls': {\n            opacity: 1,\n        },\n    },\n\n    '.controls': {\n        opacity: 0,\n        position: 'absolute',\n        transition: 'opacity 0.3s ease-in-out',\n        display: 'flex',\n        justifyContent: 'space-around',\n        alignItems: 'flex-start',\n        '.move svg': {\n            cursor: 'move',\n        },\n        button: {\n            border: 0,\n            padding: 0,\n            cursor: 'pointer',\n            backgroundColor: 'transparent',\n            '&:hover': {\n                svg: { color: '#212121' },\n            },\n        },\n        svg: {\n            height: '20px',\n            color: 'gray',\n            transition: 'opacity 0.3s ease-in-out',\n        },\n    },\n\n    '>.controls': {\n        background: editing ? '#ffffed' : 'white',\n        top: 0,\n        right: 0,\n        padding: '5px',\n        borderBottomLeftRadius: '5px',\n        position: 'absolute',\n        width: 'fit-content',\n        '> *': {\n            margin: '0 5px',\n        },\n    },\n\n    '.inline-text': {\n        padding: 0,\n        border: 0,\n        fontSize: 'inherit',\n        '&:focus': {\n            outline: 'none',\n        },\n    },\n\n    '.label': {\n        fontSize: '20px',\n        marginBottom: '5px',\n    },\n\n    '.control-preview': {\n        flex: 1,\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        '&.row': {\n            flexDirection: 'column',\n        },\n    },\n    'input + span': {\n        marginLeft: '10px',\n    },\n}))\n\nconst Controls:React.FC<{\n    target: Element | Container\n    container: Container,\n    displayEdit: boolean,\n    drag?: DragElementWrapper<DragSourceOptions>,\n}> = ({\n    target, container, drag, displayEdit,\n}) => {\n    const sc = useStoreContext()\n    const onDelete = (ev:React.MouseEvent<HTMLButtonElement>) => {\n        ev.stopPropagation()\n        sc.dispatch({\n            type: 'DELETE', target, container,\n        })\n    }\n    return (\n        <div className={cn('controls', { container: isContainer(target) })}>\n            <span>{target.control.name}</span>\n            <button className='trash' onClick={onDelete}>\n                <TrashAlt />\n            </button>\n            {displayEdit && (\n                <button onClick={() => sc.dispatch({ type: 'EDIT', target })}>\n                    <Edit />\n                </button>)}\n            {drag && (\n                <button className='move' ref={drag}>\n                    <GripHorizontal />\n                </button>)}\n        </div>\n    )\n}\n\nconst ControlPreview = styled.div.attrs({\n    className: 'control-preview',\n})({\n    padding: '10px',\n})\n\nconst InputPreview: React.FC<{\n    index: number\n    input: InputElement\n    container: Container\n}> = ({\n    index, input, container,\n}) => {\n    const [{ opacity }, drag] = useDrag({\n        item: { id: input.id, fromIndex: index, fromContainer: container, type: 'control' },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.4 : 1,\n        }),\n    })\n    const sc = useStoreContext()\n    return (\n        <ElementPreviewEl\n            ref={drag}\n            style={{ opacity }}\n            editing={sc.store.editing === input}\n            className={cn('element-preview', input.control.id)}\n            onClick={() => sc.dispatch({ type: 'EDIT', target: input })}\n        >\n            <Controls displayEdit={false} target={input} container={container} />\n            <ControlPreview>\n                <span className=\"label\">{input.data.label}</span>\n                {input.placeholder}\n            </ControlPreview>\n        </ElementPreviewEl>\n    )\n}\n\nconst TextPreview: React.FC<{\n    index: number\n    control: TextElement\n    container: Container\n}> = ({\n    index, control, container,\n}) => {\n    const sc = useStoreContext()\n    const [{ opacity }, drag] = useDrag({\n        item: { id: control.id, fromIndex: index, fromContainer: container, type: 'control' },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.4 : 1,\n        }),\n    })\n    const text = React.createElement(control.data.tag, {}, control.data.text)\n\n    return (\n        <ElementPreviewEl\n            editing={sc.store.editing === control}\n            style={{ opacity }}\n            ref={drag}\n            onClick={() => sc.dispatch({ type: 'EDIT', target: control })}\n            className={cn('element-preview', control.control.id)}\n        >\n            <Controls displayEdit target={control} container={container} />\n            <div className='control-preview'>\n                {text}\n            </div>\n        </ElementPreviewEl>\n    )\n}\n\n\nconst ContainerPreviewEl = styled(ElementPreviewEl)({\n    border: '1px dashed gray',\n    alignItems: 'stretch',\n    padding: '5px',\n\n    '> .container.controls': {\n        background: 'white',\n        border: '1px dashed gray',\n\n        width: 'fit-content',\n        '> *': {\n            margin: '0 5px',\n        },\n    },\n    '&.container-row': {\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        minHeight: 'fit-content',\n\n        '> .container-drop': {\n            width: '100%',\n        },\n        '> .container-column': {\n            margin: '-1px',\n            flex: 1,\n        },\n        '> .container.controls': {\n            top: '-27px',\n            left: 0,\n            padding: '2px 5px',\n            borderTopRightRadius: '5px',\n            borderTopLeftRadius: '5px',\n            borderBottomWidth: 0,\n        },\n    },\n    '> .container-preview': {\n        flex: 1,\n    },\n    '&.empty': {\n        alignItems: 'stretch',\n        '> .drop': {\n            minHeight: '80px',\n            flex: 1,\n        },\n    },\n    '&.container-column': {\n        '> .container.controls': {\n            top: 'calc(50% - 40px)',\n            left: '-25px',\n            right: 'auto',\n            display: 'flex',\n            width: '30px',\n            flexDirection: 'row-reverse',\n            borderRadius: '5px',\n            alignItems: 'center',\n            writingMode: 'vertical-rl',\n            textOrientation: 'upright',\n            fontSize: '80%',\n            '> *': {\n                margin: '5px 0',\n            },\n        },\n        '> .element-preview': {\n            flex: 1,\n        },\n    },\n})\n\n\nconst ContainerPreview:React.FC<{\n    container: Container\n    parent: Container\n    index: number\n}> = ({ parent, container, index }) => {\n    const [{ opacity }, drag, preview] = useDrag({\n        item: { id: container.id, fromIndex: index, fromContainer: parent, type: 'control' },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.4 : 1,\n        }),\n    })\n\n    const Drop = container.isRow ? HorizonontalDrop : VerticalDrop\n\n    return (\n        <ContainerPreviewEl\n            ref={preview}\n            style={{ opacity }}\n            className={cn('container-preview', `container-${container.direction}`, {\n                empty: container.children.length === 0,\n            })}\n        >\n            <Drop container={container} index={0} />\n            <Controls displayEdit target={container} container={parent} drag={drag} />\n            {container.children.map((el, i) => (\n                <React.Fragment key={i}>\n                    <ElementPreview index={i} container={container} el={el} />\n                    <Drop container={container} index={i + 1} />\n                </React.Fragment>\n            ))}\n        </ContainerPreviewEl>\n    )\n}\n\n\nconst ElementPreview:React.FC<{\n    el: Element|Container,\n    index: number,\n    container: Container,\n}> = ({ el, index, container }) => {\n    if (isContainer(el)) {\n        return <ContainerPreview parent={container} container={el} index={index} />\n    }\n    if (isText(el)) {\n        return <TextPreview control={el} container={container} index={index} />\n    }\n    if (isInput(el)) {\n        return <InputPreview input={el} container={container} index={index} />\n    }\n    return null\n}\n\n\nconst FormElementsEl = styled(Scrolling)({\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyItems: 'flex-start',\n    background: '#fafafa',\n    padding: '20px',\n    boxSizing: 'border-box',\n    boxShadow: '0 0 2px 1px rgba(0, 0, 0, 0.1)',\n    transition: 'all 0.3s ease-in-out',\n    width: 'fit-content',\n    minWidth: '100%',\n    '> .container-preview': {\n        margin: '0 2px',\n    },\n    'p, h1, h2, h3, h4, h5, h6': {\n        padding: 0,\n        margin: 0,\n    },\n})\nexport const FormElements = () => {\n    const { form } = useStore()\n    const [{ isHovered }, drop] = useDrop({\n        accept: 'control',\n        collect(item) {\n            return { isHovered: item.isOver() }\n        },\n        canDrop: () => false,\n    })\n\n    return (\n        <FormElementsEl\n            ref={drop}\n            className={cn('form-elements', { isHovered })}\n        >\n\n            <HorizonontalDrop container={form} index={0} />\n            {form.children.map((e, i) => (\n                <React.Fragment key={i}>\n                    <ElementPreview index={i} container={form} el={e} />\n                    <HorizonontalDrop container={form} index={i + 1} />\n                </React.Fragment>\n            ))}\n\n        </FormElementsEl>\n    )\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport cn from 'classnames'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport { Sidebar } from './editor/sidebar'\nimport { useProvidedStoreContext, StoreContext, Form } from './editor/store'\nimport { FormElements } from './editor/form'\nimport { SerializedForm } from './data'\n\nconst FormPanelEl = styled.div({\n    display: 'flex',\n    width: '100%',\n    overflow: 'hidden',\n})\nconst FormPanel = () => {\n    return (\n        <FormPanelEl>\n            <FormElements />\n        </FormPanelEl>\n    )\n}\n\nconst EditorEl = styled.div({\n    display: 'grid',\n    gridTemplateColumns: '1fr 300px',\n    gridTemplateRows: '1fr',\n    height: '100%',\n    gap: '10px',\n    position: 'relative',\n\n    // '> *': {\n    //     display: 'flex',\n    //     flexDirection: 'column',\n    // },\n})\n\nexport interface EditorProps {\n    className?: string\n    onChange?(form: Form): void\n    defaultValue?: SerializedForm\n    value?: SerializedForm\n}\n\nexport const Editor:React.FC<EditorProps> = ({\n    className, onChange, value, defaultValue,\n}) => {\n    const ctx = useProvidedStoreContext(defaultValue)\n    React.useEffect(() => {\n        ctx.dispatch({ type: 'REPLACE', form: value })\n    }, [value])\n    React.useEffect(() => {\n        if (onChange) { onChange(ctx.store.form) }\n    }, [onChange, ctx.store])\n\n    return (\n        <DndProvider backend={HTML5Backend}>\n            <StoreContext.Provider value={ctx}>\n                <EditorEl className={cn('formial-editor', className)}>\n                    <FormPanel />\n                    <Sidebar />\n                </EditorEl>\n            </StoreContext.Provider>\n        </DndProvider>\n    )\n}\n","import cn from 'classnames'\nimport {\n    SerializedForm,\n    isSerializedText,\n    isSerializedForm,\n    isSerializedInput,\n    SerializedElement,\n    SerializedContainer,\n    isSerializedContainer,\n    SerializedTextElement,\n    SerializedInputElement,\n} from './data'\n\n\ninterface UnserializeOptions {\n    parent?: Container\n}\n\ninterface ObjectAttributes {\n    [key: string]: string\n}\n\nclass Element {\n\n    data: SerializedElement\n    options: UnserializeOptions\n\n    constructor(data: SerializedElement, options: UnserializeOptions) {\n        this.data = data\n        this.options = options\n    }\n\n    el?:HTMLElement\n\n    createElement():HTMLElement {\n        return document.createElement('div')\n    }\n\n    get columnSmWidth():number {\n        if (this.options.parent instanceof Container && this.options.parent.isBSRow) {\n            return Math.round(12 / this.options.parent.children.length)\n        }\n        return 0\n    }\n\n    render(root:HTMLElement, skipAttributes = false) {\n        if (!this.el) {\n            this.el = this.createElement()\n        }\n        this.setAttributes({\n            'data-control': this.data.type,\n            'data-id': this.data.id,\n            class: cn(this.data.className, {\n                [`col-sm-${this.columnSmWidth}`]: this.columnSmWidth !== 0,\n            }),\n        })\n\n        if (!skipAttributes) {\n            this.setDataAttributes()\n        }\n\n        if (this.el.parentElement !== root) {\n            root.appendChild(this.el)\n        }\n        return this\n    }\n\n    setDataAttributes(\n        el:HTMLElement|undefined = this.el,\n    ) {\n        if (!el || !this.data.attributes) {\n            return\n        }\n        this.data.attributes.forEach((a) => {\n            if (a.id) {\n                el.setAttribute(a.id, String(a.value))\n            }\n        })\n    }\n\n\n    setAttributes(\n        attrs: ObjectAttributes,\n        el:HTMLElement|undefined = this.el,\n    ) {\n        if (!el || !attrs) {\n            return\n        }\n        Object.keys(attrs).forEach((k) => {\n            if (k) {\n                el.setAttribute(k, String(attrs[k]))\n            }\n        })\n    }\n\n}\n\nclass TextElement extends Element {\n\n    data: SerializedTextElement\n\n    constructor(data: SerializedTextElement, options: UnserializeOptions) {\n        super(data, options)\n        this.data = data\n    }\n\n    createElement():HTMLElement {\n        return document.createElement(this.data.tag)\n    }\n\n    render(root:HTMLElement) {\n        super.render(root)\n        this.el!.innerText = this.data.text\n        return this\n    }\n\n}\n\nclass InputElement extends Element {\n\n    data: SerializedInputElement\n    label?: HTMLLabelElement\n    input?: HTMLElement\n\n    constructor(data: SerializedInputElement, options: UnserializeOptions) {\n        super(data, options)\n        this.data = data\n    }\n\n\n    render(root:HTMLElement) {\n        super.render(root, true)\n\n        this.setAttributes({\n            'data-type': this.data.control,\n            class: cn(this.data.className, {\n                [`col-sm-${this.columnSmWidth}`]: this.columnSmWidth !== 0,\n            }),\n        })\n\n        if (!this.input) {\n            const renderer = this[`_${this.data.control}`]\n            if (renderer) {\n                const input =  renderer.apply(this)\n                this.input = input as HTMLElement\n                // this.input.className = this.data.classNames.input\n                // this.input.id = this.data.id\n                this.el!.appendChild(this.input)\n            }\n        }\n        return this\n    }\n\n    get optionPairs(): Array<[string, string]> {\n        const { options } = this.data\n        if (options) {\n            return options.map(opt => [opt.id, opt.value])\n        }\n        return []\n    }\n\n    createInput(tag: string) {\n        const float = document.createElement('div')\n        float.className = this.data.classNames.wrapper\n\n        const input = document.createElement(tag)\n        this.setDataAttributes()\n        this.setAttributes({\n            name: this.data.name,\n            id: this.data.id,\n            class: 'form-control',\n            placeholder: this.data.label,\n        }, input)\n\n        float.appendChild(input)\n\n        const label = document.createElement('label')\n        label.innerText = this.data.label\n        this.setAttributes({\n            for: this.data.id,\n        }, label)\n\n        const req = this.data.attributes && this.data.attributes.find(a => a.id =='required')\n        if (req && req.value === 'true') {\n            const asterisk = document.createElement('span')\n            asterisk.innerText = '✱'\n            this.setAttributes({ class: 'required-indicator' }, asterisk)\n            label.appendChild(asterisk)\n        }\n        float.appendChild(label)\n        return float\n    }\n\n    _textarea() {\n        return this.createInput('textarea')\n    }\n\n    _input() {\n        return this.createInput('input')\n    }\n\n    renderOptions(cb: (a:string, b:string) => { [k:string]: string }) {\n        const wrapper = document.createElement('div')\n        this.setDataAttributes(wrapper)\n        wrapper.className = this.data.classNames.wrapper\n\n        const labelTitle = document.createElement('div')\n        labelTitle.innerText = this.data.label\n        wrapper.appendChild(labelTitle)\n\n        const layout = this.data.choicesLayout\n        const isVertical = Boolean(!layout || layout == 'vertical')\n        const optionsWrapper = document.createElement('div')\n        optionsWrapper.className = cn('d-flex', 'flex-wrap', {\n            'flex-column': isVertical,\n            'ml-2': !isVertical,\n        })\n\n        this.optionPairs.forEach(([optId, optValue]) => {\n            const { id, inputType, name, value, label } = cb(optId, optValue)\n            const inputId = `${id}-${this.data.id}`\n\n            const option = document.createElement('label')\n\n            this.setAttributes({\n                class: cn('form-check', {\n                    'ml-2': isVertical,\n                    'pr-2': !isVertical,\n                    'col-4':  layout === 'three_column',\n                    'col-6': layout === 'two_column',\n                })\n            }, option)\n            optionsWrapper\n\n            const input = document.createElement('input')\n            this.setAttributes({\n                class: 'form-check-input',\n                'data-id': id,\n                type: inputType,\n                name,\n                value,\n                id: inputId,\n            }, input)\n            option.appendChild(input)\n\n            const labelEl = document.createElement('span')\n            this.setAttributes({\n                className: 'form-check-label',\n            }, labelEl)\n            labelEl.innerText = label\n            option.appendChild(labelEl)\n\n            optionsWrapper.appendChild(option)\n        })\n        wrapper.appendChild(optionsWrapper)\n\n        return wrapper\n    }\n\n    _radio() {\n        return this.renderOptions((id:string, value: string) => ({\n            inputType: 'radio',\n            name: this.data.name,\n            id,\n            value,\n            label: value,\n        }))\n    }\n\n    _checkbox(): HTMLDivElement {\n        return this.renderOptions((id:string, value: string) => ({\n            inputType: 'checkbox',\n            name: id,\n            value,\n            id,\n            label: value,\n        }))\n    }\n\n    _select(): HTMLDivElement {\n        const wrapper = document.createElement('div')\n        wrapper.className = 'form-floating'\n\n        const select = document.createElement('select')\n        this.setAttributes({\n            name: this.data.name,\n            class: 'form-select',\n            id: this.data.id,\n        }, select)\n\n        this.optionPairs.forEach(([value, label]) => {\n            const option = document.createElement('option')\n            this.setAttributes({ value }, option)\n            option.innerText = label\n            select.appendChild(option)\n        })\n\n        wrapper.appendChild(select)\n\n        const label = document.createElement('label')\n        this.setAttributes({\n            for: this.data.id,\n        }, label)\n        label.innerText = this.data.label\n\n        wrapper.appendChild(label)\n\n        return wrapper\n    }\n\n}\n\n\nclass Container extends Element {\n\n    children: Array<Element>\n\n    data: SerializedContainer\n    constructor(data: SerializedContainer, options: UnserializeOptions) {\n        super(data, options)\n        this.data = data\n        this.children = data.children\n            .map(c => unserialize(c, { parent: this }))\n            .filter(Boolean) as Array<Element>\n    }\n\n    get isBSRow() {\n        // counter intuitively, a bootstrap row is laid out in columns\n        return this.data.direction === 'column'\n    }\n\n    render(root:HTMLElement) {\n        super.render(root)\n\n        this.el!.className = cn(this.el?.className, {\n            row: this.isBSRow, // a bootstrap row lays out in columns\n            'd-flex flex-column': !this.isBSRow,\n            'formial-form': this.data.type == 'FORM'\n        })\n        this.children.forEach(c => c.render(this.el!))\n        return this\n    }\n\n}\n\nconst unserialize = (data: SerializedElement, options: UnserializeOptions = {}):Element => {\n    if (isSerializedText(data)) {\n        return new TextElement(data, options)\n    }\n\n    if (isSerializedContainer(data) || isSerializedForm(data)) {\n        return new Container(data, options)\n    }\n\n    if (isSerializedInput(data)) {\n        return new InputElement(data, options)\n    }\n\n    return new Element(data, options)\n}\n\nexport const findField = (el: any, id: string): SerializedElement | null => {\n    if (el.id === id) {\n        return el\n    }\n    if (Array.isArray(el.children)) {\n        for (const child of el.children) {\n            const match = findField(child, id)\n            if (match) {\n                return match\n            }\n        }\n    }\n    return null\n}\n\nexport const render = (root: HTMLElement, form: SerializedForm) => {\n    root.innerHTML = ''\n    const tree = unserialize(form)\n    if (tree) {\n        tree.render(root)\n    }\n}\n","import React from 'react'\nimport { Editor, Container, render } from 'formial'\n\nconst DEFAULT =\n{\"id\":\"48be90c9-3a9a-4fc6-9626-242a30febc05\",\"type\":\"FORM\",\"control\":\"col\",\"name\":\"col-2335\",\"direction\":\"row\",\"children\":[{\"id\":\"d69b7300-312a-4b8b-9da9-b616e987b8b4\",\"type\":\"TEXT\",\"control\":\"heading\",\"name\":\"heading-4027\",\"tag\":\"h3\",\"text\":\"Hello World\",\"className\":\"\"},{\"id\":\"9e2e85b9-b24e-4d51-b126-a7f5c579039a\",\"type\":\"TEXT\",\"control\":\"para\",\"name\":\"para-9368\",\"tag\":\"p\",\"text\":\"Please, tell us a bit about yourself\",\"className\":\"\"},{\"id\":\"91a1e96a-e603-4dd7-92fd-14b4090c4754\",\"type\":\"CONTAINER\",\"control\":\"col\",\"name\":\"col-7258\",\"direction\":\"column\",\"children\":[{\"id\":\"09f04ad7-b72b-481d-90c4-535bb5b1b632\",\"type\":\"CONTAINER\",\"control\":\"row\",\"name\":\"row-1462\",\"direction\":\"row\",\"children\":[{\"id\":\"e6b074bf-4c4d-447e-890a-bb52bc24aece\",\"type\":\"INPUT\",\"control\":\"input\",\"name\":\"name\",\"label\":\"Your name\",\"className\":\"mb-2\",\"classNames\":{\"wrapper\":\"form-floating\",\"label\":\"\",\"input\":\"form-control\"},\"attributes\":[{\"id\":\"type\",\"value\":\"text\"},{\"id\":\"required\",\"value\":\"true\"}]},{\"id\":\"051dc23f-d3b6-4783-a45d-54f6f4801ba2\",\"type\":\"INPUT\",\"control\":\"input\",\"name\":\"email\",\"label\":\"Email\",\"className\":\"mb-2\",\"classNames\":{\"wrapper\":\"form-floating\",\"label\":\"\",\"input\":\"form-control\"},\"attributes\":[{\"id\":\"required\",\"value\":\"true\"},{\"id\":\"type\",\"value\":\"email\"}]},{\"id\":\"11fa0234-0c92-4a2c-864e-668cd8580fd8\",\"type\":\"INPUT\",\"control\":\"textarea\",\"name\":\"address\",\"label\":\"Address\",\"className\":\"mb-2\",\"classNames\":{\"wrapper\":\"form-floating\",\"label\":\"\",\"input\":\"form-control\"},\"attributes\":[]}],\"className\":\"\",\"attributes\":[]},{\"id\":\"05df9d75-a59f-4f44-99bb-c37bd17db17d\",\"type\":\"CONTAINER\",\"control\":\"row\",\"name\":\"row-10995\",\"direction\":\"row\",\"children\":[{\"id\":\"1d1b3a3d-88b0-4ca2-979b-4fb231c33f9a\",\"type\":\"INPUT\",\"control\":\"checkbox\",\"name\":\"foods\",\"options\":[{\"id\":\"steak\",\"value\":\"Steak\"},{\"id\":\"tomatoe\",\"value\":\"Tomato\"},{\"id\":\"pinapple\",\"value\":\"Pineapple\"},{\"id\":\"spinach\",\"value\":\"Spinach\"},{\"id\":\"candy\",\"value\":\"Candy\"},{\"id\":\"broccoli \",\"value\":\"Broccoli\"}],\"choicesLayout\":\"vertical\",\"label\":\"Which foods do you like?\",\"className\":\"mb-2\",\"classNames\":{\"wrapper\":\"form-control\",\"label\":\"\",\"input\":\"form-control\"},\"attributes\":[]},{\"id\":\"7a16f198-cac0-440e-93a8-3c0bc153184e\",\"type\":\"INPUT\",\"control\":\"radio\",\"name\":\"cats\",\"options\":[{\"id\":\"1\",\"value\":\"One\"},{\"id\":\"2\",\"value\":\"Two\"},{\"id\":\"3\",\"value\":\"Three\"}],\"choicesLayout\":\"vertical\",\"label\":\"How many Cats?\",\"className\":\"mb-2\",\"classNames\":{\"wrapper\":\"form-control\",\"label\":\"\",\"input\":\"form-control\"},\"attributes\":[]},{\"id\":\"b8a55c2a-6044-4672-a384-74be779b8f95\",\"type\":\"INPUT\",\"control\":\"select\",\"name\":\"number\",\"options\":[{\"id\":\"2\",\"value\":\"2\"},{\"id\":\"1\",\"value\":\"one\"},{\"id\":\"5\",\"value\":\"5\"},{\"id\":\"42\",\"value\":\"forty two\"}],\"label\":\"Pick a number\",\"className\":\"mb-2\",\"classNames\":{\"wrapper\":\"form-floating\",\"label\":\"\",\"input\":\"form-control\"},\"attributes\":[]}],\"className\":\"\",\"attributes\":[]}],\"className\":\"\",\"attributes\":[]}],\"className\":\"formial-form\",\"attributes\":[]}\n\n\n\n\n\nconst App = () => {\n    const [value, setValue] = React.useState<Container>()\n    const htmlRef = React.useRef(null)\n\n    const onChange = (container: Container) => setValue(container)\n\n    const renderHTML = () => {\n        // json would normally be saved.\n        // It's intended to be loading back into the editor or rendered to a form\n        const json = value!.serialize()\n        console.log(JSON.stringify(json))\n        render(htmlRef.current!, json)\n    }\n\n    return (\n        <div id=\"example-builder\">\n            <h3>Formial Demo</h3>\n            <p>\n                This is an example of Formial editing and rendering forms.  The source\n                code for this demo can be viewed in <a href=\"https://github.com/nathanstitt/formial/blob/main/example/src/App.tsx\">example/src/App.tsx</a>.\n            </p>\n                <Editor onChange={onChange} defaultValue={DEFAULT} />\n                <hr />\n                <div><button onClick={renderHTML}>Render</button></div>\n                <hr />\n                <div className=\"mb-4\" ref={htmlRef}></div>\n        </div>\n    )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}